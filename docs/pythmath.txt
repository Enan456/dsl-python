5. Fixed Effects Calculation (felm model):
   a. Core Function (demean_dsl equivalent):
      - Takes data_base, adj_Y, adj_X, and index_use as inputs
      - Creates unique IDs for observations
      - Calculates group means for Y and X variables using pandas groupby
      - Merges means back to original data
      - Returns adjusted Y and X means, plus group-level data

   b. One-way Fixed Effects:
      - Uses single categorical variable (e.g., state, firm)
      - Calculates group means using pandas groupby
      - fe_Y = fixed_effect_use['adj_Y_avg_exp']
      - fe_X = fixed_effect_use[adj_X.columns]

   c. Two-way Fixed Effects:
      - Uses two categorical variables (e.g., state and year)
      - Calculates means for both indices separately
      - Combines effects with grand mean adjustment:
        * fe_Y = mean1 + mean2 - grand_mean
        * fe_X = (X_mean1 + X_mean2 - X_grand_mean).T
      - Handles double-counting of means

   d. Integration with DSL:
      - Uses scipy.sparse for efficiency
      - Residuals: Y - fe_use - X @ par
      - Special Jacobian calculation for felm model
      - Preserves original data order
      - Handles missing values (dropna = True)

   e. Key Differences from R:
      - Uses pandas groupby instead of tapply
      - Uses scipy.sparse instead of Matrix package
      - Matrix operations use @ operator instead of %*%
      - DataFrame operations instead of data.frame
      - Python's list comprehension for group means
      - Different handling of missing values syntax 